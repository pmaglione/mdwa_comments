#Resource Bundle for en_US
=
ajax.computingRequest=Computing request..
boolean.no=no
boolean.yes=yes
BooleanValidation=<li>the entered value must be a boolean (${pattern}) </li>
CaptchaValidationRule.error=\ <li>the entered value did not match what was displayed</li>
CheckedItemsValidationRule.eq=<li>${itemCount} items checked required</li>
CheckedItemsValidationRule.max=<li>check at most ${itemCount} items</li>
CheckedItemsValidationRule.min=<li>check at least ${itemCount} items</li>
CollectionValidationRule.in=<li>the entered value must be one of\: ${values}</li>
CollectionValidationRule.in.query=<li>the entered value is not included in the list of valid values</li>
CollectionValidationRule.notIn=<li>the entered value must not be one of\: ${values}</li>
CollectionValidationRule.notIn.query=<li>the entered value is included in the list of forbidden values</li>
CompareValidationRule.eq=<li>the entered value should be equal to ${value}</li>
CompareValidationRule.eq.field=<li>the entered value should be equal to the value of ${otherFieldName} field</li>
CompareValidationRule.gt=<li>the entered value should be greater than ${value}</li>
CompareValidationRule.gt.field=<li>the entered value should be greater than the value of ${otherFieldName} field</li>
CompareValidationRule.gteq=<li>the entered value should be greater than or equal to ${value}</li>
CompareValidationRule.gteq.field=<li>the entered value should be greater than or equal to the value of ${otherFieldName} field</li>
CompareValidationRule.lt=<li>the entered value should be smaller than ${value}</li>
CompareValidationRule.lt.field=<li>the entered value should be smaller than the value of ${otherFieldName} field</li>
CompareValidationRule.lteq=<li>the entered value should be smaller than or equal to ${value}</li>
CompareValidationRule.lteq.field=<li>the entered value should be smaller than or equal to the value of ${otherFieldName} field</li>
CompareValidationRule.neq=<li>the entered value should be different from ${value}</li>
CompareValidationRule.neq.field=<li>the entered value should be different from the value of ${otherFieldName} field</li>
CreditCardValidationRule.error=<li>invalid credit card number</li>
DateValidation=<li>the entered value should have the format ${pattern}</li>
DecimalValidation=<li>the entered value must be a number</li>
EMailValidationRule.error=<li>invalid email address</li>
emptyUnitMessage=No Results
error.button.not.pressed=<li>Please press a button for form submission</li>
error.check.eqChecked=<li>{1} items checked required</li>
error.check.maxChecked=<li>check at most {1} items</li>
error.check.minChecked=<li>check at least {1} items</li>
error.empty={0}
error.security=A security exception occurred\: {0}
error.stacktrace={0}
error.validation.exception=<li>The following exception occurred during form validation\: {0}</li>
errors.footer=</ul>
errors.header=<ul>
FloatValidation=<li>the entered value must be a float</li>
FormNotEmptyValidationRule.error=<li>at least one field must be filled</li>
HierarchicalIndex.First=first
HierarchicalIndex.From=from
HierarchicalIndex.Jump=jump to
HierarchicalIndex.Last=last
HierarchicalIndex.Next=next
HierarchicalIndex.NoItemsShownOf=no items shown of
HierarchicalIndex.Of=of
HierarchicalIndex.Previous=previous
HierarchicalIndex.To=to
HTMLSanitizerValidationRule.error=<li>validation failed</li>
IntegerValidation=<li>the entered value must be an integer</li>
JobStatus.JobDescription=Description
JobStatus.JobGroup=Group
JobStatus.JobId=ID
JobStatus.JobStatus=Status
JobStatus.TriggerDescription=Description
JobStatus.TriggerGroup=Group
JobStatus.TriggerId=ID
JobStatus.TriggerNextFireTimestamp=Next Fire Timestamp
LikeValidationRule.contains=<li>the entered value should contain ${value}</li>
LikeValidationRule.contains.field=<li>the entered value should contain the value of ${otherFieldName} field</li>
LikeValidationRule.endsWith=<li>the entered value should end with ${value}</li>
LikeValidationRule.endsWith.field=<li>the entered value should end with the value of ${otherFieldName} field</li>
LikeValidationRule.notContains=<li>the entered value should not contain ${value}</li>
LikeValidationRule.notContains.field=<li>the entered value should not contain the value of ${otherFieldName} field</li>
LikeValidationRule.notEndsWith=<li>the entered value should not end with ${value}</li>
LikeValidationRule.notEndsWith.field=<li>the entered value should not end with the value of ${otherFieldName} field</li>
LikeValidationRule.notStartsWith=<li>the entered value should not begin with ${value}</li>
LikeValidationRule.notStartsWith.field=<li>the entered value should not begin with the value of ${otherFieldName} field</li>
LikeValidationRule.startsWith=<li>the entered value should begin with ${value}</li>
LikeValidationRule.startsWith.field=<li>the entered value should begin with the value of ${otherFieldName} field</li>
linkConfirmMessage=Continue?
MandatoryValidationRule.error=<li>mandatory field</li>
multiselectionfield.deselectAll=Deselect All
multiselectionfield.selectAll=Select All
PasswordStrengthValidationRule.boxTitle=Password must meet the following requirements\:
PasswordStrengthValidationRule.capitalCharCriteria=At least <b>one capital letter</b>
PasswordStrengthValidationRule.charactersWord=characters
PasswordStrengthValidationRule.custom=<li>Password must respect the required security criteria.</li>
PasswordStrengthValidationRule.high=<li>Password must be composed from 10 to 128 characters. At least 3 out 4 out of the following must be true\: at least 1 uppercase character (A-Z), at least 1 lowercase character (a-z), at least 1 digit (0-9), at least 1 special character. No more than 3 repeated equal characters are accepted.</li>
PasswordStrengthValidationRule.low=<li>Password must be composed from 4 to 9 characters. Numbers and both lowercase and uppercase letters are required.</li>
PasswordStrengthValidationRule.lowerCharCriteria=At least <b>one lower letter</b>
PasswordStrengthValidationRule.medium=<li>Password must be composed from 10 to 32 characters. At least 3 out 4 out of the following must be true\: at least 1 uppercase character (A-Z), at least 1 lowercase character (a-z), at least 1 digit (0-9), at least 1 special character. No more than 3 repeated equal characters are accepted.</li>
PasswordStrengthValidationRule.noRepetitionCriteria=Less then <b>3 equal characters</b>
PasswordStrengthValidationRule.numbersCriteria=At least <b>one number</b>
PasswordStrengthValidationRule.specialCharCriteria=At least <b>one special character</b>
PowerIndex.First=first
PowerIndex.From=from
PowerIndex.Jump=jump to
PowerIndex.Last=last
PowerIndex.Next=next
PowerIndex.NoItemsShownOf=no items shown of
PowerIndex.Of=of
PowerIndex.Previous=previous
PowerIndex.To=to
Query.First=first
Query.From=from
Query.Jump=jump to
Query.Last=last
Query.Next=next
Query.NoItemsShownOf=no items shown of
Query.Of=of
Query.Previous=previous
Query.To=to
QueryUnit.noDiplayAtrributes=No selected display attributes
QueryUnit.wrongExtAttributeCondition=One or more conditions are based on attributes outside the table space
QueryUnit.wrongGrouping=All the displayed attributes must be used as grouping or aggregate function
RecaptchaValidationRule.error=<li>CAPTCHA verification unsuccessful. Please try again.</li>
RegularExpressionValidationRule.error=<li>the entered value is not valid</li>
Scroller.First=first
Scroller.From=from
Scroller.Jump=jump to
Scroller.Last=last
Scroller.Next=next
Scroller.NoItemsShownOf=no items shown of
Scroller.Of=of
Scroller.Previous=previous
Scroller.To=to
selectionfield.noselection=No selection
TimestampValidation=<li>the entered value should be in the format ${pattern}</li>
TimeValidation=<li>the entered value should be in the format ${pattern}</li>
TypeValidationRule.error=<li>the entered value should have the format ${pattern}</li>
ValueLengthValidationRule.blob.eq=<li>wrong file size (${length})</li>
ValueLengthValidationRule.blob.max=<li>maximum file size exceeded (${length})</li>
ValueLengthValidationRule.blob.min=<li>wrong file size (>${length})</li>
ValueLengthValidationRule.blob.neq=<li>file size not allowed (${length})</li>
ValueLengthValidationRule.eq=<li>the entered value length must be ${length} characters</li>
ValueLengthValidationRule.max=<li>the entered value length must be at most ${length} characters</li>
ValueLengthValidationRule.min=<li>the entered value length must be at least ${length} characters</li>
ValueLengthValidationRule.neq=<li>the entered value length must be different from ${length} characters</li>
XsdTypeValidationRule.fraction.digits=<li>the entered value must have at most ${digits} fraction digits</li>
XsdTypeValidationRule.invalid.boolean=<li>Invalid Boolean</li>
XsdTypeValidationRule.invalid.date=<li>Invalid Date</li>
XsdTypeValidationRule.invalid.decimal=<li>Invalid Decimal</li>
XsdTypeValidationRule.invalid.enum=<li>Invalid enumeration value (${values})</li>
XsdTypeValidationRule.invalid.float=<li>Invalid Float</li>
XsdTypeValidationRule.invalid.integer=<li>Invalid Integer</li>
XsdTypeValidationRule.invalid.length=<li>the entered value length must be ${length} characters</li>
XsdTypeValidationRule.invalid.pattern=<li>the entered value has an invalid format (${pattern})</li>
XsdTypeValidationRule.invalid.time=<li>Invalid Time</li>
XsdTypeValidationRule.invalid.timestamp=<li>Invalid Timestamp</li>
XsdTypeValidationRule.mandatory=<li>mandatory field</li>
XsdTypeValidationRule.max.exclusive=<li>the entered value should be smaller than ${value}</li>
XsdTypeValidationRule.max.inclusive=<li>the entered value should be smaller than or equal to ${value}</li>
XsdTypeValidationRule.max.length=<li>the entered value length must be at most ${length} characters</li>
XsdTypeValidationRule.min.exclusive=<li>the entered value should be greater than ${value}</li>
XsdTypeValidationRule.min.inclusive=<li>the entered value should be greater than or equal to ${value}</li>
XsdTypeValidationRule.min.length=<li>the entered value length must be at least ${length} characters</li>
XsdTypeValidationRule.negative.value=<li>Must be a negative value</li>
XsdTypeValidationRule.positive.value=<li>Must be a positive value</li>
XsdTypeValidationRule.total.digits=<li>the entered value must have at most ${digits} total digits</li>